/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as AuthedIndexRouteImport } from './routes/_authed.index'
import { Route as AuthSignInRouteImport } from './routes/auth.sign-in'
import { Route as AuthedChatRouteImport } from './routes/_authed.chat'
import { Route as AuthedChatIndexRouteImport } from './routes/_authed.chat.index'
import { Route as AuthedChatChatIdRouteImport } from './routes/_authed.chat.$chatId'
import { ServerRoute as ApiChatServerRouteImport } from './routes/api.chat'

const rootServerRouteImport = createServerRootRoute()

const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedIndexRoute = AuthedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedChatRoute = AuthedChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedChatIndexRoute = AuthedChatIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedChatRoute,
} as any)
const AuthedChatChatIdRoute = AuthedChatChatIdRouteImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => AuthedChatRoute,
} as any)
const ApiChatServerRoute = ApiChatServerRouteImport.update({
  id: '/api/chat',
  path: '/api/chat',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '': typeof AuthedRouteWithChildren
  '/chat': typeof AuthedChatRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/': typeof AuthedIndexRoute
  '/chat/$chatId': typeof AuthedChatChatIdRoute
  '/chat/': typeof AuthedChatIndexRoute
}
export interface FileRoutesByTo {
  '/auth/sign-in': typeof AuthSignInRoute
  '/': typeof AuthedIndexRoute
  '/chat/$chatId': typeof AuthedChatChatIdRoute
  '/chat': typeof AuthedChatIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/chat': typeof AuthedChatRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/_authed/': typeof AuthedIndexRoute
  '/_authed/chat/$chatId': typeof AuthedChatChatIdRoute
  '/_authed/chat/': typeof AuthedChatIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/chat' | '/auth/sign-in' | '/' | '/chat/$chatId' | '/chat/'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth/sign-in' | '/' | '/chat/$chatId' | '/chat'
  id:
    | '__root__'
    | '/_authed'
    | '/_authed/chat'
    | '/auth/sign-in'
    | '/_authed/'
    | '/_authed/chat/$chatId'
    | '/_authed/chat/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthedRoute: typeof AuthedRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
}
export interface FileServerRoutesByFullPath {
  '/api/chat': typeof ApiChatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/chat': typeof ApiChatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/chat': typeof ApiChatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/chat'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/chat'
  id: '__root__' | '/api/chat'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiChatServerRoute: typeof ApiChatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/chat': {
      id: '/_authed/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthedChatRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/api/chat': {
      id: '/api/chat'
      path: ''
      fullPath: '/api/chat'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/': {
      id: '/_authed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthedIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/chat/$chatId': {
      id: '/_authed/chat/$chatId'
      path: '/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof AuthedChatChatIdRouteImport
      parentRoute: typeof AuthedChatRoute
    }
    '/_authed/chat/': {
      id: '/_authed/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof AuthedChatIndexRouteImport
      parentRoute: typeof AuthedChatRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_authed/chat': {
      id: '/_authed/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/api/chat': {
      id: '/api/chat'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_authed/': {
      id: '/_authed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_authed/chat/$chatId': {
      id: '/_authed/chat/$chatId'
      path: '/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_authed/chat/': {
      id: '/_authed/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthedChatRouteChildren {
  AuthedChatChatIdRoute: typeof AuthedChatChatIdRoute
  AuthedChatIndexRoute: typeof AuthedChatIndexRoute
}

const AuthedChatRouteChildren: AuthedChatRouteChildren = {
  AuthedChatChatIdRoute: AuthedChatChatIdRoute,
  AuthedChatIndexRoute: AuthedChatIndexRoute,
}

const AuthedChatRouteWithChildren = AuthedChatRoute._addFileChildren(
  AuthedChatRouteChildren,
)

interface AuthedRouteChildren {
  AuthedChatRoute: typeof AuthedChatRouteWithChildren
  AuthedIndexRoute: typeof AuthedIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedChatRoute: AuthedChatRouteWithChildren,
  AuthedIndexRoute: AuthedIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthedRoute: AuthedRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiChatServerRoute: ApiChatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
