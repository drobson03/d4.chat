/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as AuthedIndexRouteImport } from './routes/_authed.index'
import { Route as SignInSplatRouteImport } from './routes/sign-in.$'
import { Route as AuthedChatRouteImport } from './routes/_authed.chat'
import { Route as AuthedChatSplatRouteImport } from './routes/_authed.chat.$'
import { ServerRoute as ApiChatServerRouteImport } from './routes/api.chat'

const rootServerRouteImport = createServerRootRoute()

const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedIndexRoute = AuthedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedRoute,
} as any)
const SignInSplatRoute = SignInSplatRouteImport.update({
  id: '/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedChatRoute = AuthedChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedChatSplatRoute = AuthedChatSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => AuthedChatRoute,
} as any)
const ApiChatServerRoute = ApiChatServerRouteImport.update({
  id: '/api/chat',
  path: '/api/chat',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/chat': typeof AuthedChatRouteWithChildren
  '/sign-in/$': typeof SignInSplatRoute
  '/': typeof AuthedIndexRoute
  '/chat/$': typeof AuthedChatSplatRoute
}
export interface FileRoutesByTo {
  '/chat': typeof AuthedChatRouteWithChildren
  '/sign-in/$': typeof SignInSplatRoute
  '/': typeof AuthedIndexRoute
  '/chat/$': typeof AuthedChatSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/chat': typeof AuthedChatRouteWithChildren
  '/sign-in/$': typeof SignInSplatRoute
  '/_authed/': typeof AuthedIndexRoute
  '/_authed/chat/$': typeof AuthedChatSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/chat' | '/sign-in/$' | '/' | '/chat/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/chat' | '/sign-in/$' | '/' | '/chat/$'
  id:
    | '__root__'
    | '/_authed'
    | '/_authed/chat'
    | '/sign-in/$'
    | '/_authed/'
    | '/_authed/chat/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthedRoute: typeof AuthedRouteWithChildren
  SignInSplatRoute: typeof SignInSplatRoute
}
export interface FileServerRoutesByFullPath {
  '/api/chat': typeof ApiChatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/chat': typeof ApiChatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/chat': typeof ApiChatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/chat'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/chat'
  id: '__root__' | '/api/chat'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiChatServerRoute: typeof ApiChatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/': {
      id: '/_authed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthedIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/sign-in/$': {
      id: '/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof SignInSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/chat': {
      id: '/_authed/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthedChatRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/chat/$': {
      id: '/_authed/chat/$'
      path: '/$'
      fullPath: '/chat/$'
      preLoaderRoute: typeof AuthedChatSplatRouteImport
      parentRoute: typeof AuthedChatRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/chat': {
      id: '/api/chat'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthedChatRouteChildren {
  AuthedChatSplatRoute: typeof AuthedChatSplatRoute
}

const AuthedChatRouteChildren: AuthedChatRouteChildren = {
  AuthedChatSplatRoute: AuthedChatSplatRoute,
}

const AuthedChatRouteWithChildren = AuthedChatRoute._addFileChildren(
  AuthedChatRouteChildren,
)

interface AuthedRouteChildren {
  AuthedChatRoute: typeof AuthedChatRouteWithChildren
  AuthedIndexRoute: typeof AuthedIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedChatRoute: AuthedChatRouteWithChildren,
  AuthedIndexRoute: AuthedIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthedRoute: AuthedRouteWithChildren,
  SignInSplatRoute: SignInSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiChatServerRoute: ApiChatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
